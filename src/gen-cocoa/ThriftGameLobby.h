/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"


@interface GLEvent : NSObject <NSCoding> {
  int32_t __index;
  NSString * __type;
  int32_t __sender;
  NSArray * __data;
  NSString * __senderName;

  BOOL __index_isset;
  BOOL __type_isset;
  BOOL __sender_isset;
  BOOL __data_isset;
  BOOL __senderName_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=index, setter=setIndex:) int32_t index;
@property (nonatomic, retain, getter=type, setter=setType:) NSString * type;
@property (nonatomic, getter=sender, setter=setSender:) int32_t sender;
@property (nonatomic, retain, getter=data, setter=setData:) NSArray * data;
@property (nonatomic, retain, getter=senderName, setter=setSenderName:) NSString * senderName;
#endif

- (id) initWithIndex: (int32_t) index type: (NSString *) type sender: (int32_t) sender data: (NSArray *) data senderName: (NSString *) senderName;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int32_t) index;
- (void) setIndex: (int32_t) index;
- (BOOL) indexIsSet;

- (NSString *) type;
- (void) setType: (NSString *) type;
- (BOOL) typeIsSet;

- (int32_t) sender;
- (void) setSender: (int32_t) sender;
- (BOOL) senderIsSet;

- (NSArray *) data;
- (void) setData: (NSArray *) data;
- (BOOL) dataIsSet;

- (NSString *) senderName;
- (void) setSenderName: (NSString *) senderName;
- (BOOL) senderNameIsSet;

@end

@interface GLPlayer : NSObject <NSCoding> {
  int32_t __playerID;
  NSString * __playerName;
  int32_t __currentGameID;
  int32_t __team;

  BOOL __playerID_isset;
  BOOL __playerName_isset;
  BOOL __currentGameID_isset;
  BOOL __team_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=playerID, setter=setPlayerID:) int32_t playerID;
@property (nonatomic, retain, getter=playerName, setter=setPlayerName:) NSString * playerName;
@property (nonatomic, getter=currentGameID, setter=setCurrentGameID:) int32_t currentGameID;
@property (nonatomic, getter=team, setter=setTeam:) int32_t team;
#endif

- (id) initWithPlayerID: (int32_t) playerID playerName: (NSString *) playerName currentGameID: (int32_t) currentGameID team: (int32_t) team;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int32_t) playerID;
- (void) setPlayerID: (int32_t) playerID;
- (BOOL) playerIDIsSet;

- (NSString *) playerName;
- (void) setPlayerName: (NSString *) playerName;
- (BOOL) playerNameIsSet;

- (int32_t) currentGameID;
- (void) setCurrentGameID: (int32_t) currentGameID;
- (BOOL) currentGameIDIsSet;

- (int32_t) team;
- (void) setTeam: (int32_t) team;
- (BOOL) teamIsSet;

@end

@interface GLGame : NSObject <NSCoding> {
  int32_t __gameID;
  NSString * __name;
  int32_t __owner;
  NSArray * __players;
  NSString * __type;
  NSArray * __expansions;

  BOOL __gameID_isset;
  BOOL __name_isset;
  BOOL __owner_isset;
  BOOL __players_isset;
  BOOL __type_isset;
  BOOL __expansions_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=gameID, setter=setGameID:) int32_t gameID;
@property (nonatomic, retain, getter=name, setter=setName:) NSString * name;
@property (nonatomic, getter=owner, setter=setOwner:) int32_t owner;
@property (nonatomic, retain, getter=players, setter=setPlayers:) NSArray * players;
@property (nonatomic, retain, getter=type, setter=setType:) NSString * type;
@property (nonatomic, retain, getter=expansions, setter=setExpansions:) NSArray * expansions;
#endif

- (id) initWithGameID: (int32_t) gameID name: (NSString *) name owner: (int32_t) owner players: (NSArray *) players type: (NSString *) type expansions: (NSArray *) expansions;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (int32_t) gameID;
- (void) setGameID: (int32_t) gameID;
- (BOOL) gameIDIsSet;

- (NSString *) name;
- (void) setName: (NSString *) name;
- (BOOL) nameIsSet;

- (int32_t) owner;
- (void) setOwner: (int32_t) owner;
- (BOOL) ownerIsSet;

- (NSArray *) players;
- (void) setPlayers: (NSArray *) players;
- (BOOL) playersIsSet;

- (NSString *) type;
- (void) setType: (NSString *) type;
- (BOOL) typeIsSet;

- (NSArray *) expansions;
- (void) setExpansions: (NSArray *) expansions;
- (BOOL) expansionsIsSet;

@end

@protocol TGameLobby <NSObject>
- (int32_t) GLregisterPlayer: (NSString *) playerName;  // throws TException
- (void) GLunregisterPlayer: (int32_t) playerID;  // throws TException
- (GLGame *) GLgameWithID: (int32_t) gameID;  // throws TException
- (GLGame *) GLnewGame: (int32_t) playerID : (NSString *) name : (NSString *) type : (NSArray *) expansions;  // throws TException
- (BOOL) GLrequestToJoinGame: (int32_t) playerID : (int32_t) gameID;  // throws TException
- (void) GLswitchToTeam: (int32_t) playerID : (int32_t) gameID : (int32_t) team;  // throws TException
- (void) GLcancelGame: (int32_t) playerID : (GLGame *) game;  // throws TException
- (NSArray *) GLgetPlayersInLobby;  // throws TException
- (NSArray *) GLgetGames;  // throws TException
- (NSArray *) GLgetPlayersInGame: (GLGame *) game;  // throws TException
- (GLGame *) GLgetGame: (int32_t) gameID;  // throws TException
- (void) GLstartGame: (int32_t) gameID;  // throws TException
- (void) GLaddEvent: (GLEvent *) event;  // throws TException
- (void) GLpassExpansion: (int32_t) gameID : (int32_t) playerID : (NSString *) expansion;  // throws TException
- (int32_t) GLcurrentEventIndex;  // throws TException
- (NSArray *) GLgetEvents: (int32_t) sinceIndex;  // throws TException
@end

@interface TGameLobbyClient : NSObject <TGameLobby> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface TGameLobbyProcessor : NSObject <TProcessor> {
  id <TGameLobby> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithTGameLobby: (id <TGameLobby>) service;
- (id<TGameLobby>) service;
@end

@interface ThriftGameLobbyConstants : NSObject {
}
@end
